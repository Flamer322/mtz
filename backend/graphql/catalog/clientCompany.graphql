extend type Mutation {
    createCompany(input: CreateCompanyInput): CreateCompanyPayload @field(resolver: "Catalog\\CreateCompanyMutation") @guard
}

extend type Query {
    company(id: ID! @eq @rules(apply: ["required", "integer", "exists:App\\Catalog\\Entity\\ClientCompany,id"])): ClientCompany! @find
}

type ClientCompany @model(class: "App\\Catalog\\Entity\\ClientCompany") {
    id: Int
    legal_name: String!
    legal_address: String
    post_address: String
    inn: String!
    okpo: String
    kpp: String
    ogrn: String
    bik: String
    corr_account: String
    bank_account: String
    main_organization: String
    short_name: String
    bank_name: String
    director_post: String
    director_name: String
}

input CreateCompanyInput @validator(class: "Catalog\\CreateCompanyValidator") {
    legalName: String!
    legalAddress: String
    postAddress: String
    inn: String!
    okpo: String
    kpp: String
    ogrn: String
    bik: String
    corrAccount: String
    bankAccount: String
    mainOrganization: String
    shortName: String
    bankName: String
    directorPost: String
    directorName: String
}

type CreateCompanyPayload {
    id: Int!
}
